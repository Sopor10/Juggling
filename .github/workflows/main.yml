name: build-and-push

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "juggling"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Install workload
        run: dotnet workload install wasm-tools
      - name: Test
        run: dotnet test -c Release --filter TestCategory!=E2E
        
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Install workload
        run: dotnet workload install wasm-tools
      - name: install playwright
        run: |
          npx playwright install-deps # install dependencies for all browsers
          npx playwright install-deps chromium # install dependencies for Chromium only
      - name: run Webassembly 
        run: nohup dotnet run -c release --project ./Webassembly/Webassembly.csproj --no-build &
      - name: Test
        run: dotnet test -c Release --filter TestCategory=E2E --project ./Siteswaps.E2ETests/Siteswaps.E2ETests.csproj
        env:
          E2E_TEST_BASEURL: https://localhost:7021
  publish-docker-image:
    needs: [unit-test, integration-test]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to GithubRegistry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.7.0
      - name: run minver
        id: version
        uses: thefringeninja/action-minver@2.0.0-preview1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: WebApplication/Dockerfile
          push: true
          tags: "${{ env.REGISTRY }}/sopor10/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}"