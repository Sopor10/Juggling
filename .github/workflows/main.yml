name: build-and-push

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "juggling"

jobs:
  build-and-test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Install workload
        run: dotnet workload install wasm-tools
      - name: Build Solution
        run: dotnet build -c release        
     
      - name: Test
        run: dotnet test -c Release --filter TestCategory!=E2E

      - name: install playwright
        run: |
          npm install
          npx playwright install
          npx playwright install chromium

      - name: Publish Webassembly
        run: dotnet publish Webassembly/Webassembly.csproj -o release -c Release 
      
      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "release/wwwroot"
          output_location: ''
          skip_app_build: true
      
      - name: Wait for Netlify Deploy
        uses: probablyup/wait-for-netlify-action@v3.4.0
        id: waitForDeployment
        with:
          max_timeout: 60
          site_id: ${{ secrets.NETLIFY_SITE_ID }}
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      - name: Test
        run: dotnet test -c Release --no-build --filter TestCategory=E2E
        env:
          E2E_TEST_BASEURL: ${{ steps.waitForDeployment.outputs.url }}
          
  publish-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to GithubRegistry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: run minver
        id: version
        uses: thefringeninja/action-minver@2.0.0-preview1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: WebApplication/Dockerfile
          push: true
          tags: "${{ env.REGISTRY }}/sopor10/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}"
          
  close:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close
    steps:
      - name: Close
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"          