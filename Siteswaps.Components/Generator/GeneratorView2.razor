@using Siteswaps.Components.Generator.State
@using ExhaustiveMatching
<EditForm Model="Values" OnValidSubmit="@Generate">

    @switch (Values.Objects)
    {
        case Between between:
            <label for="minNumberOfObjects">Period</label>
            <InputNumber id="minNumberOfObjects" min="0" Value="@between.MinNumber" ValueChanged="MinNumberChanged" ValueExpression="@(() => between.MinNumber)"/>

            <label for="maxNumberOfObjects">Period</label>
            <InputNumber id="maxNumberOfObjects" min="0" Value="@between.MaxNumber" ValueExpression="@(() => between.MaxNumber)"/>
            break;
        case ExactNumber exactNumber:
            <label for="numberOfObjects">Period</label>
            <InputNumber id="numberOfObjects" min="0" Value="@exactNumber.Number" ValueExpression="@(() => exactNumber.Number)"/>
            break;
        default:
            ExhaustiveMatch.Failed(Values.Objects);
            break;
    }

    <label for="period">Period</label>
    <InputNumber id="period" min="0" Value="@Values.Period" ValueChanged="PeriodChanged" ValueExpression="@(() => Values.Period)"/>

    <label for="maxThrow">max throw</label>
    <InputNumber id="maxThrow" min="0" Value="@Values.MaxThrow" ValueExpression="@(() => Values.MaxThrow)"/>

    <label for="minThrow">min throw</label>
    <InputNumber id="minThrow" min="0" Value="@Values.MinThrow" ValueExpression="@(() => Values.MinThrow)"/>

    <label for="numberOfJugglers">#Jugglers</label>
    <InputNumber id="numberOfJugglers" min="1" Value="@Values.NumberOfJugglers" ValueExpression="@(() => Values.NumberOfJugglers)"/>

    <label for="generate">Generate</label>
    <input id="generate" type="submit"/>
</EditForm>

@code {

    [Parameter]
    public GeneratorState Values { get; set; }

    [Parameter]
    public Action Generate { get; set; }

    [Parameter]
    public EventCallback<int> PeriodChanged { get; set; }

    
    [Parameter]
    public EventCallback<int> MinNumberChanged { get; set; }

    [Parameter]
    public EventCallback<int> MaxNumberChanged { get; set; }

    [Parameter]
    public EventCallback<int> ExactNumberChanged { get; set; }

    [Parameter]
    public EventCallback<int> MaxThrowChanged { get; set; }

    [Parameter]
    public EventCallback<int> MinThrowChanged { get; set; }

    [Parameter]
    public EventCallback<int> NumberOfJugglersChanged { get; set; }

}